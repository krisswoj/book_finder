spring.datasource.url=${JDBC_DATABASE_URL}
spring.datasource.username=${JDBC_DATABASE_USERNAME}
spring.datasource.password=${JDBC_DATABASE_PASSWORD}
spring.jpa.show-sql=false
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create



#JDBC_DATABASE_URL=jdbc:postgres://ec2-174-129-18-98.compute-1.amazonaws.com
#JDBC_DATABASE_USERNAME=uzokqawptlqpif
#JDBC_DATABASE_PASSWORD=08e6b63750b0cd1aa097e6dc8b4d8736bae72671edc1a5fadf6387e548428050


#spring.datasource.url = jdbc:mysql://localhost/books
#spring.datasource.username = root
#spring.datasource.password =
#
## Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1
#
## Show or not log for each sql query
#spring.jpa.show-sql = true
#
## Hibernate ddl auto (create, create-drop, update)
##spring.jpa.hibernate.ddl-auto = create
#
## Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
#
## Use spring.jpa.properties.* for Hibernate native properties (the prefix is
## stripped before adding them to the entity manager)
#
## The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
